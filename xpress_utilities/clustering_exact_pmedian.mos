(!******************************************************
   Problema di clustering (P-Mediana)
*******************************************************!)

model Clustering
 uses "mmxprs"

 declarations

  clienti = 1..45
  centri = 1..45

  P : integer	! numeri di centri da aprire
  COSTI_I_J : array (clienti,centri) of real ! distanze clienti - centri

  x: array(clienti,centri) of mpvar
  y: array(centri) of mpvar
 end-declarations

 initializations from "clustering.dat"
  P
  COSTI_I_J
 end-initializations

 ! Funzione obiettivo: somma delle distanze di ciascun cliente dal centro cui afferiscono
 Obj:= sum(i in clienti, j in centri) COSTI_I_J(i,j)*x(i,j)

 ! Vincolo sul numero di centri
 sum(j in centri) y(j) = P

 ! Vincoli sui clienti: la domanda di ciascun cliente deve essere soddisfatta
 forall(i in clienti)
   sum(j in centri) x(i,j) = 1

 ! Variable upper bound: un cliente i può afferire al centro j solo se j è "aperto"
 forall(i in clienti)
  forall(j in centri) do
     x(i,j) >= 0
     x(i,j) <= y(j)
  end-do

 ! Le variabili y_j sono binarie
 forall(j in centri)
   y(j) is_binary

 ! Risolve il modello
 minimize(Obj)

 ! Stampa la soluzione
 writeln("Solution:\n Objective: ", getobjval)

 forall(i in clienti, j in centri)
   if ( getsol(x(i,j)) > 0.001 ) then
     writeln("x(",i,",",j,") = ", getsol(x(i,j)))
   end-if

 forall(j in centri)
   if ( getsol(y(j)) > 0.001 ) then
     writeln("y(",j,") = ", getsol(y(j)))
   end-if

end-model
